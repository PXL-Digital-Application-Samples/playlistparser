services:
  # Database
  db:
    image: postgres:17-alpine
    container_name: playlistparser-db
    environment:
      POSTGRES_DB: playlistparser
      POSTGRES_USER: playlistparser
      POSTGRES_PASSWORD: playlistparser
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - playlistparser-network

  # API Backend
  api:
    build: 
      context: ./api
      dockerfile: Dockerfile
    container_name: playlistparser-api
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./api/.env
    environment:
      DATABASE_URL: postgres://playlistparser:playlistparser@db:5432/playlistparser?schema=public
      FRONTEND_ORIGIN: http://127.0.0.1:5173
      RUN_DB_SETUP: "true"
      SEED_DB: "true"
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/healthz || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    networks:
      - playlistparser-network

  # Frontend
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: playlistparser-frontend
    depends_on:
      api:
        condition: service_healthy
    environment:
      VITE_API_BASE_URL: http://127.0.0.1:3000
    ports:
      - "5173:80"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:80 || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - playlistparser-network

volumes:
  db_data:
    driver: local

networks:
  playlistparser-network:
    driver: bridge
